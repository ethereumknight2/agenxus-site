name: Deploy to GitHub Pages

on:
  push:
    branches: [main]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
            dealership-landing/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies for main site
        run: npm ci --prefer-offline --no-audit

      - name: Build main site
        run: npm run build

      - name: Install dependencies for dealership landing
        run: |
          cd dealership-landing
          npm ci --prefer-offline --no-audit

      - name: Build dealership landing
        run: |
          cd dealership-landing
          npm run build

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Prepare deployment directory
        run: |
          mkdir -p _site
          cp -r dist/* _site/

          # Copy SEO files
          cp sitemap.xml _site/sitemap.xml 2>/dev/null || echo "sitemap.xml not found"
          cp robots.txt _site/robots.txt 2>/dev/null || echo "robots.txt not found"

          # Copy pages
          cp contact.html _site/contact.html 2>/dev/null || echo "contact.html not found"
          cp privacy.html _site/privacy.html 2>/dev/null || echo "privacy.html not found" 
          cp terms.html _site/terms.html 2>/dev/null || echo "terms.html not found"

          # Create dealership landing page
          mkdir -p _site/ai-agent-car-dealerships
          cp -r dealership-landing/dist/* _site/ai-agent-car-dealerships/

          # Copy optional assets
          [ -f favicon.ico ] && cp favicon.ico _site/
          [ -f favicon-16x16.png ] && cp favicon-16x16.png _site/
          [ -f favicon-32x32.png ] && cp favicon-32x32.png _site/
          [ -f apple-touch-icon.png ] && cp apple-touch-icon.png _site/
          [ -f site.webmanifest ] && cp site.webmanifest _site/
          [ -f public/logo.png ] && cp public/logo.png _site/

          touch _site/.nojekyll

          echo "‚úÖ Deployment prepared successfully"
          echo "üìÅ Total files: $(find _site -type f | wc -l)"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "_site"

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
